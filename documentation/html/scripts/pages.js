var pages = [{'name': 'fun DefaultPreview()', 'description':'com.example.workout_companion.DefaultPreview', 'location':'app/com.example.workout_companion/-default-preview.html', 'searchKey':'DefaultPreview'},
{'name': 'fun Greeting(name: String)', 'description':'com.example.workout_companion.Greeting', 'location':'app/com.example.workout_companion/-greeting.html', 'searchKey':'Greeting'},
{'name': 'class MainActivity : ComponentActivity', 'description':'com.example.workout_companion.MainActivity', 'location':'app/com.example.workout_companion/-main-activity/index.html', 'searchKey':'MainActivity'},
{'name': 'fun MainActivity()', 'description':'com.example.workout_companion.MainActivity.MainActivity', 'location':'app/com.example.workout_companion/-main-activity/-main-activity.html', 'searchKey':'MainActivity'},
{'name': 'interface UserDao', 'description':'com.example.workout_companion.dao.UserDao', 'location':'app/com.example.workout_companion.dao/-user-dao/index.html', 'searchKey':'UserDao'},
{'name': 'abstract suspend fun delete(item: UserEntity)', 'description':'com.example.workout_companion.dao.UserDao.delete', 'location':'app/com.example.workout_companion.dao/-user-dao/delete.html', 'searchKey':'delete'},
{'name': 'abstract suspend fun deleteAll()', 'description':'com.example.workout_companion.dao.UserDao.deleteAll', 'location':'app/com.example.workout_companion.dao/-user-dao/delete-all.html', 'searchKey':'deleteAll'},
{'name': 'abstract suspend fun getAge(name: String): Int', 'description':'com.example.workout_companion.dao.UserDao.getAge', 'location':'app/com.example.workout_companion.dao/-user-dao/get-age.html', 'searchKey':'getAge'},
{'name': 'suspend fun getAge(name: String): Int', 'description':'com.example.workout_companion.repository.UserRepository.getAge', 'location':'app/com.example.workout_companion.repository/-user-repository/get-age.html', 'searchKey':'getAge'},
{'name': 'fun getAge(name: String): Int', 'description':'com.example.workout_companion.viewmodel.UserViewModel.getAge', 'location':'app/com.example.workout_companion.viewmodel/-user-view-model/get-age.html', 'searchKey':'getAge'},
{'name': 'abstract fun getAll(): LiveData<List<UserEntity>>', 'description':'com.example.workout_companion.dao.UserDao.getAll', 'location':'app/com.example.workout_companion.dao/-user-dao/get-all.html', 'searchKey':'getAll'},
{'name': 'abstract suspend fun getBirthDate(name: String): LocalDate', 'description':'com.example.workout_companion.dao.UserDao.getBirthDate', 'location':'app/com.example.workout_companion.dao/-user-dao/get-birth-date.html', 'searchKey':'getBirthDate'},
{'name': 'abstract suspend fun getByName(name: String): UserEntity', 'description':'com.example.workout_companion.dao.UserDao.getByName', 'location':'app/com.example.workout_companion.dao/-user-dao/get-by-name.html', 'searchKey':'getByName'},
{'name': 'suspend fun getByName(name: String): UserEntity', 'description':'com.example.workout_companion.repository.UserRepository.getByName', 'location':'app/com.example.workout_companion.repository/-user-repository/get-by-name.html', 'searchKey':'getByName'},
{'name': 'abstract fun getCount(): Int', 'description':'com.example.workout_companion.dao.UserDao.getCount', 'location':'app/com.example.workout_companion.dao/-user-dao/get-count.html', 'searchKey':'getCount'},
{'name': 'suspend fun getCount(): Int', 'description':'com.example.workout_companion.repository.UserRepository.getCount', 'location':'app/com.example.workout_companion.repository/-user-repository/get-count.html', 'searchKey':'getCount'},
{'name': 'abstract suspend fun getCountWithName(name: String): Int', 'description':'com.example.workout_companion.dao.UserDao.getCountWithName', 'location':'app/com.example.workout_companion.dao/-user-dao/get-count-with-name.html', 'searchKey':'getCountWithName'},
{'name': 'suspend fun getCountWithName(name: String): Int', 'description':'com.example.workout_companion.repository.UserRepository.getCountWithName', 'location':'app/com.example.workout_companion.repository/-user-repository/get-count-with-name.html', 'searchKey':'getCountWithName'},
{'name': 'abstract suspend fun insert(item: UserEntity)', 'description':'com.example.workout_companion.dao.UserDao.insert', 'location':'app/com.example.workout_companion.dao/-user-dao/insert.html', 'searchKey':'insert'},
{'name': 'abstract suspend fun update(item: UserEntity)', 'description':'com.example.workout_companion.dao.UserDao.update', 'location':'app/com.example.workout_companion.dao/-user-dao/update.html', 'searchKey':'update'},
{'name': 'abstract class WCDatabase : RoomDatabase', 'description':'com.example.workout_companion.database.WCDatabase', 'location':'app/com.example.workout_companion.database/-w-c-database/index.html', 'searchKey':'WCDatabase'},
{'name': 'fun WCDatabase()', 'description':'com.example.workout_companion.database.WCDatabase.WCDatabase', 'location':'app/com.example.workout_companion.database/-w-c-database/-w-c-database.html', 'searchKey':'WCDatabase'},
{'name': 'object Companion', 'description':'com.example.workout_companion.database.WCDatabase.Companion', 'location':'app/com.example.workout_companion.database/-w-c-database/-companion/index.html', 'searchKey':'Companion'},
{'name': 'fun getInstance(context: Context): WCDatabase', 'description':'com.example.workout_companion.database.WCDatabase.Companion.getInstance', 'location':'app/com.example.workout_companion.database/-w-c-database/-companion/get-instance.html', 'searchKey':'getInstance'},
{'name': 'abstract fun userDao(): UserDao', 'description':'com.example.workout_companion.database.WCDatabase.userDao', 'location':'app/com.example.workout_companion.database/-w-c-database/user-dao.html', 'searchKey':'userDao'},
{'name': 'data class UserEntity(name: String, experience_level: String, sex: String, birth_date: LocalDate, max_workouts_per_week: Int, activity_level: String)', 'description':'com.example.workout_companion.entity.UserEntity', 'location':'app/com.example.workout_companion.entity/-user-entity/index.html', 'searchKey':'UserEntity'},
{'name': 'fun UserEntity(name: String, experience_level: String, sex: String, birth_date: LocalDate, max_workouts_per_week: Int, activity_level: String)', 'description':'com.example.workout_companion.entity.UserEntity.UserEntity', 'location':'app/com.example.workout_companion.entity/-user-entity/-user-entity.html', 'searchKey':'UserEntity'},
{'name': 'operator fun component1(): String', 'description':'com.example.workout_companion.entity.UserEntity.component1', 'location':'app/com.example.workout_companion.entity/-user-entity/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component2(): String', 'description':'com.example.workout_companion.entity.UserEntity.component2', 'location':'app/com.example.workout_companion.entity/-user-entity/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component3(): String', 'description':'com.example.workout_companion.entity.UserEntity.component3', 'location':'app/com.example.workout_companion.entity/-user-entity/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component4(): LocalDate', 'description':'com.example.workout_companion.entity.UserEntity.component4', 'location':'app/com.example.workout_companion.entity/-user-entity/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component5(): Int', 'description':'com.example.workout_companion.entity.UserEntity.component5', 'location':'app/com.example.workout_companion.entity/-user-entity/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component6(): String', 'description':'com.example.workout_companion.entity.UserEntity.component6', 'location':'app/com.example.workout_companion.entity/-user-entity/component6.html', 'searchKey':'component6'},
{'name': 'fun copy(name: String, experience_level: String, sex: String, birth_date: LocalDate, max_workouts_per_week: Int, activity_level: String): UserEntity', 'description':'com.example.workout_companion.entity.UserEntity.copy', 'location':'app/com.example.workout_companion.entity/-user-entity/copy.html', 'searchKey':'copy'},
{'name': 'class UserRepository(userDao: UserDao)', 'description':'com.example.workout_companion.repository.UserRepository', 'location':'app/com.example.workout_companion.repository/-user-repository/index.html', 'searchKey':'UserRepository'},
{'name': 'fun UserRepository(userDao: UserDao)', 'description':'com.example.workout_companion.repository.UserRepository.UserRepository', 'location':'app/com.example.workout_companion.repository/-user-repository/-user-repository.html', 'searchKey':'UserRepository'},
{'name': 'suspend fun addUser(item: UserEntity)', 'description':'com.example.workout_companion.repository.UserRepository.addUser', 'location':'app/com.example.workout_companion.repository/-user-repository/add-user.html', 'searchKey':'addUser'},
{'name': 'fun addUser(item: UserEntity)', 'description':'com.example.workout_companion.viewmodel.UserViewModel.addUser', 'location':'app/com.example.workout_companion.viewmodel/-user-view-model/add-user.html', 'searchKey':'addUser'},
{'name': 'suspend fun checkIfUserExists(name: String): Boolean', 'description':'com.example.workout_companion.repository.UserRepository.checkIfUserExists', 'location':'app/com.example.workout_companion.repository/-user-repository/check-if-user-exists.html', 'searchKey':'checkIfUserExists'},
{'name': 'suspend fun deletaAll()', 'description':'com.example.workout_companion.repository.UserRepository.deletaAll', 'location':'app/com.example.workout_companion.repository/-user-repository/deleta-all.html', 'searchKey':'deletaAll'},
{'name': 'suspend fun deleteUser(item: UserEntity)', 'description':'com.example.workout_companion.repository.UserRepository.deleteUser', 'location':'app/com.example.workout_companion.repository/-user-repository/delete-user.html', 'searchKey':'deleteUser'},
{'name': 'fun deleteUser(item: UserEntity)', 'description':'com.example.workout_companion.viewmodel.UserViewModel.deleteUser', 'location':'app/com.example.workout_companion.viewmodel/-user-view-model/delete-user.html', 'searchKey':'deleteUser'},
{'name': 'suspend fun updateUser(item: UserEntity)', 'description':'com.example.workout_companion.repository.UserRepository.updateUser', 'location':'app/com.example.workout_companion.repository/-user-repository/update-user.html', 'searchKey':'updateUser'},
{'name': 'fun updateUser(item: UserEntity)', 'description':'com.example.workout_companion.viewmodel.UserViewModel.updateUser', 'location':'app/com.example.workout_companion.viewmodel/-user-view-model/update-user.html', 'searchKey':'updateUser'},
{'name': 'fun Workout_companionTheme(darkTheme: Boolean, content: () -> Unit)', 'description':'com.example.workout_companion.ui.theme.Workout_companionTheme', 'location':'app/com.example.workout_companion.ui.theme/-workout_companion-theme.html', 'searchKey':'Workout_companionTheme'},
{'name': 'object DateTimeConverter', 'description':'com.example.workout_companion.utility.DateTimeConverter', 'location':'app/com.example.workout_companion.utility/-date-time-converter/index.html', 'searchKey':'DateTimeConverter'},
{'name': 'fun fromLocalDate(date: LocalDate?): String?', 'description':'com.example.workout_companion.utility.DateTimeConverter.fromLocalDate', 'location':'app/com.example.workout_companion.utility/-date-time-converter/from-local-date.html', 'searchKey':'fromLocalDate'},
{'name': 'fun toLocalDate(value: String?): LocalDate?', 'description':'com.example.workout_companion.utility.DateTimeConverter.toLocalDate', 'location':'app/com.example.workout_companion.utility/-date-time-converter/to-local-date.html', 'searchKey':'toLocalDate'},
{'name': 'class UserViewModel(application: Application) : AndroidViewModel', 'description':'com.example.workout_companion.viewmodel.UserViewModel', 'location':'app/com.example.workout_companion.viewmodel/-user-view-model/index.html', 'searchKey':'UserViewModel'},
{'name': 'fun UserViewModel(application: Application)', 'description':'com.example.workout_companion.viewmodel.UserViewModel.UserViewModel', 'location':'app/com.example.workout_companion.viewmodel/-user-view-model/-user-view-model.html', 'searchKey':'UserViewModel'},
{'name': 'class UserViewModelFactory(application: Application) : ViewModelProvider.Factory', 'description':'com.example.workout_companion.viewmodel.UserViewModelFactory', 'location':'app/com.example.workout_companion.viewmodel/-user-view-model-factory/index.html', 'searchKey':'UserViewModelFactory'},
{'name': 'fun UserViewModelFactory(application: Application)', 'description':'com.example.workout_companion.viewmodel.UserViewModelFactory.UserViewModelFactory', 'location':'app/com.example.workout_companion.viewmodel/-user-view-model-factory/-user-view-model-factory.html', 'searchKey':'UserViewModelFactory'},
{'name': 'open override fun <T : ViewModel?> create(modelClass: Class<T>): T', 'description':'com.example.workout_companion.viewmodel.UserViewModelFactory.create', 'location':'app/com.example.workout_companion.viewmodel/-user-view-model-factory/create.html', 'searchKey':'create'}]
